[package]
name = "matono_web"
version = "0.0.1"
edition = "2021"

[toolchain]
channel = "nightly"

[lib]
crate-type = ["cdylib", "rlib"]

[build]
target = "wasm32-unknown-unknown"

[features]
default = ["console_error_panic_hook"]

[dependencies]
client = { package = "matono_client", path = "../client" }
wasm-bindgen = "0.2.78"
wasm-bindgen-futures = "0.4.28"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.28"

[build-dependencies]
html5ever = "0.26.0"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = 0
debug = true
